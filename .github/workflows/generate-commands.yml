name: Generate Laravel Commands
on:
  workflow_dispatch:
  schedule:
  # At 08:00 Friday
  - cron: "0 8 * * 5"
jobs:
    fetch_latest_laravel_versions:
        name: Fetch Latest Laravel Versions
        runs-on: ubuntu-latest
        steps:
          - name: Get versions from Packagist
            id: fetch_versions
            run: |
                # Fetch the latest Laravel versions from Packagist
                curl -s https://packagist.org/packages/laravel/laravel.json \
                | jq -r '.package.versions[] \ # extract Laravel and php min version
                | select(.require.php != null) | select(.version_normalized != null) \
                | .version_normalized, .require.php' \
                | sed -e '/dev/,+1d' -e '1~2 s/\..*//' -e 'N;s/\n/ /' \ # Normalize
                | sort -Vru -k1,1 | head -4 \ # Sort, dedupe, and get the latest 4 versions
                | jq -Rn '[inputs | split(" ") | {v:.[0], php:.[1]}]' \ # e.g {v: "8", php: ">=7.3.0"}
                | tee $GITHUB_WORKSPACE/versions.json
                echo "::set-output name=versions::$(cat $GITHUB_WORKSPACE/versions.json)"
    generate:
        needs: fetch_latest_laravel_versions
        name: Laravel v${{ matrix.laravel.v }} - PHP ${{ matrix.laravel.php }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                laravel: ${{ fromJson(needs.fetch_latest_laravel_versions.outputs.versions) }}
        steps:
            - name: Check out code
              uses: actions/checkout@v3
            - name: Set up git user
              run: git config --global user.name ${GITHUB_ACTOR}
            - name: Set up git email
              run: git config --global user.email ${GITHUB_ACTOR}@users.noreply.github.com

            - name: Setup PHP, with Composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                php-version: ${{ matrix.laravel.php }}
                extensions: dom, curl, libxml, mbstring, zip
                tools: composer:v2

            - name: Install Laravel
              run: composer create-project --no-progress laravel/laravel="^${{ matrix.laravel.v }}" /tmp/laravel

            - name: Run Generator Command
              run: |
                cd /tmp/laravel
                cat ${{ github.workspace }}/scripts/generate | php artisan tinker > /tmp/${{ matrix.laravel.v }}.x.json | true

            - name: Update index file with version list
              run: |
                # Delete existing file
                echo -n "" > ${{ github.workspace }}/pages/api/index.js
                # Iterate over each version and create the file using the example above
                for version in ${{ fromJson(needs.fetch_latest_laravel_versions.outputs.versions) }}; do
                    echo "import v${version} from './${version}.x.json'" >> ${{ github.workspace }}/pages/api/index.js
                done
                # Next add the rest of the file
                echo "" >> ${{ github.workspace }}/pages/api/index.js
                echo "const commands = {" >> ${{ github.workspace }}/pages/api/index.js
                for version in ${{ fromJson(needs.fetch_latest_laravel_versions.outputs.versions) }}; do
                    echo "    '${version}.x': v${version}," >> ${{ github.workspace }}/pages/api/index.js
                done
                echo "}" >> ${{ github.workspace }}/pages/api/index.js
                echo "export default commands" >> ${{ github.workspace }}/pages/api/index.js

            - name: Update main branch
              run: |
                  n=0
                  until [ "$n" -ge 10 ]
                  do
                    git fetch --all
                    git reset --hard HEAD
                    git clean -f -d
                    git pull || true
                    cp /tmp/${{ matrix.laravel.v }}.x.json ${{ github.workspace }}/pages/api/_data/
                    git add -A || true
                    git commit -am 'Build Laravel version v${{ matrix.laravel.v }}' || true
                    git push --force && break
                    n=$((n+1))
                    sleep 15
                  done
              continue-on-error: true
